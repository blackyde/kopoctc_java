
/**
 * @FileName : Rounds.java
 * @Project : 0521
 * @Date : 2019. 5. 21.
 * @Author : JBP
 * @Descript : 반올림 버림 처리
 */
public class Rounds {

	public static void main(String[] args) {

		/////////////////////////////////////////
		//#4. 원하는 자릿수 반올림, 버림처리
		
		int k08_ii = 12345; //12345원 10원 이하 버려서 처리하기
		int k08_j = (k08_ii / 10) * 10; //정수형 연산으로 소수점을 버리고 다시 뒤에 0을 붙인다.
		System.out.printf("#4-1 : %d\n", k08_j);
		
		k08_ii = 12345; //10원 이하 반올림 처리하기
		k08_j = ((k08_ii + 5) / 10) * 10; //5를 더해 10의 자리가 바뀌는가가 반올림의 기준
		System.out.printf("#4-2 : %d\n", k08_j);
		
		k08_ii = 12344;
		k08_j = ((k08_ii + 5) / 10) * 10; //5를 더해도 10의자리는 그대로 이므로 버림과 같다
		System.out.printf("#4-3 : %d\n", k08_j);
		
		/////////////////////////////////////////
		//#4-X. 100원이하 버림 올림, 1000원이하 버림 반올림을 구현
		
		k08_ii = 12345; //100원 이하 버림 = 12300
		k08_j = (k08_ii / 100) * 100;
		System.out.printf("#4-X1 : %d\n", k08_j);
		
		k08_ii = 12345; //100원 이하 올림 = 12400
		k08_j = ((k08_ii + 100) / 100) * 100;
		System.out.printf("#4-X2 : %d\n", k08_j);
		
		k08_ii = 12345; //1000원 이하 버림 = 12000
		k08_j = (k08_ii / 1000) * 1000;
		System.out.printf("#4-X3 : %d\n", k08_j);
		
		k08_ii = 12345; //1000원 이하 반올림 = 12000
		k08_j = ((k08_ii + 500) / 1000) * 1000;
		System.out.printf("#4-X4 : %d\n", k08_j);
	}

}
